.. title: Likun.cc 的由来
.. slug: about-likun-cc
.. date: 2024-02-14 08:30:00 UTC
.. tags: nikola, bulma
.. category: default
.. link:
.. description: 本文记叙 Likun.cc 作为软件的来龙去脉
.. type: text

为什么是 likun.cc
====================

.cc 本是科科斯群岛国家域名，但很多全球 500 强公司拿它作为 Commercial Company 用，让它成为了 .com 和 .net 之外的重要域名。

Likun.cc 也表达了本站为个人职业服务。

Likun.cc 是一种软件，在业务思维中，每行软件代码都有维护成本。

Likun.cc 也和其他软件一样也需要实现效益，既在保证软件质量的前提下，达成软件目的，并尽可能控制成本。

效益和成本
====================

较长的简历的痛点是阅读耗时长，且结构不易理解，本站存在的目的就是用更易阅读的方式来结构化呈现较长的个人简历。

本站预设的用户有 BOSS、来自各招聘渠道 HR 和猎头。

它的主要内容是个人职业经历，菜单「简历」和「项目」都是职业的视角，采用简化的呈现形式，让阅读者更易阅读。

本站的成本只有域名费用，资源的投入几乎是一次性的，内容托管在微软的 GitHub，并在 CloudFlare CDN 以域名 dev.likun.cc 进行备份分发。

我期望每一次维护都是最后一次维护。

技术决策点
====================

本站为响应式网站，采用成熟的 JamStack 技术栈，后端服务可用性都是工业标准，且维护成本为零。

因为只依赖前端技术，让技术决策点收敛到两点：前端兼容性和可维护性。

我们可以看到效益约束下，技术决策和成本的权衡可以从一个前端技术的笑话说起：

「前端人越过了 Angular、React、VUE、Svelte 之山，构建与打包之崖，发现前端的起点和终点，都是纯 CSS 和 JavaScript。」

一方面，这句可能的意义是，从兼容性和成本上考虑，不引入第三方 CSS 和 JavaScript 框架依赖都是技术路径和掌控力最高的选择；

另一方面，从软件的开发成本和可维护性上考虑，引入一个现代的响应式 CSS 框架却是更好的选择。

还有一个考虑是，内容用 rst[#f1]_ 中使用 raw html，既可控制页面细节，也方便将内容集中在 Json 中，实现样式和内容的分离，提高了可维护性。

技术栈具体来说，采用 Nikola，主要考虑其格式支持广泛，CSS 上使用比 BootStrap 更现代化一些的 bulma.css 定制的 Theme，源码可见项目标签最后的条目。

技术之路，蓦然回首，灯火阑珊。


脚注
====================

.. [#f1] rst 的全称是 reStructuredText，比 MarkDown 更统一更严谨的标记语言，也是 Python文档的行业标准。参见：`官方文档 <https://docutils.sourceforge.io/rst.html>`_
